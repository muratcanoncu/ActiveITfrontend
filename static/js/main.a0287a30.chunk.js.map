{"version":3,"sources":["NewComponents/LoadingPage/LoadingPage.js","NewComponents/AddingForm/AddingForm.js","NewComponents/ItemList/GroceryItemList.js","NewComponents/UpdatePage/UpdatePage.js","NewComponents/UserMessage/UserMessage.js","App.js","reportWebVitals.js","index.js"],"names":["LoadingPage","id","className","AddingForm","updating","itemAdded","useState","importance","name","amount","done","groceryItem","setGroceryItem","updateInput","e","target","value","Form","onSubmit","event","preventDefault","jsonGrocery","JSON","stringify","axios","post","headers","Accept","then","response","data","console","log","catch","err","Group","controlId","Label","Control","as","defaultValue","onChange","type","placeholder","Button","variant","GroceryItemList","itemDeleted","groceryList","setGroceryList","deleteItem","a","removeItemId","updateToDoneItem","doneItemId","updateToNotDoneItem","notDoneItemId","useEffect","get","itemListByDone","sort","b","itemA","itemB","comparison","Table","striped","bordered","hover","size","length","map","onClick","_id","to","UpdatePage","itemUpdated","history","useHistory","match","useRouteMatch","updateItem","setUpdateItem","updateInputHandler","updateGroceryItem","jsonUpdateItem","config","params","push","UserMessage","showModal","show","setShow","handleClose","Modal","centered","onHide","Header","Title","Body","Footer","App","loading","setLoading","isUpdated","setIsUpdated","message","setMessage","successfullyAdded","setSuccessfullyAdded","successfullyRemoved","setSuccessfullyRemoved","successfullyUpdated","setSuccessfullyUpdated","updateHandler","setTimeout","path","exact","style","height","idx","Alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":";+OAgBeA,MAdf,WACE,OACE,0BACEC,GAAG,cACHC,UAAU,+DAFZ,UAIE,wDACA,oBAAGA,UAAU,aAAb,oDACyC,4D,iDC0EhCC,MAjFf,YAA8C,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAC9B,EAAsCC,mBAAS,CAC7CC,WAAY,EACZC,KAAM,GACNC,OAAQ,EACRC,MAAM,IAJR,mBAAOC,EAAP,KAAoBC,EAApB,KAMMC,EAAc,SAACC,GACnBF,EAAe,2BAAKD,GAAN,kBAAoBG,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UA6B7D,OACE,eAACC,EAAA,EAAD,CAAMf,UAAU,mBAAmBgB,SA5Bf,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAcC,KAAKC,UAAUZ,GAQnCa,IACGC,KAAK,+CAAgDJ,EARzC,CACbK,QAAS,CACP,eAAgB,kCAChBC,OAAQ,QACR,8BAA+B,OAKhCC,MAAK,SAACC,GACDA,EAASC,OACXC,QAAQC,IAAIH,EAASC,MACrB1B,IACAC,QAGH4B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAI,SAAUE,MACxCtB,EAAe,CACbL,WAAY,EACZC,KAAM,GACNC,OAAQ,EACRC,MAAM,KAIR,UACE,eAACO,EAAA,EAAKkB,MAAN,CAAYC,UAAU,gBAAgBlC,UAAU,OAAhD,UACE,cAACe,EAAA,EAAKoB,MAAN,yBACA,eAACpB,EAAA,EAAKqB,QAAN,CACEC,GAAG,SACH/B,KAAK,aACLgC,aAAa,0BACbC,SAAU5B,EAJZ,UAME,wBAAQG,MAAM,IAAd,qCACA,wBAAQA,MAAM,IAAd,gCACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,+BACA,wBAAQA,MAAM,IAAd,4CAGJ,eAACC,EAAA,EAAKkB,MAAN,CAAYjC,UAAU,OAAtB,UACE,cAACe,EAAA,EAAKoB,MAAN,wBACA,cAACpB,EAAA,EAAKqB,QAAN,CACEI,KAAK,OACLlC,KAAK,OACLQ,MAAOL,EAAYH,KACnBmC,YAAY,kCACZF,SAAU5B,OAGd,eAACI,EAAA,EAAKkB,MAAN,CAAYjC,UAAU,OAAtB,UACE,cAACe,EAAA,EAAKoB,MAAN,qBACA,cAACpB,EAAA,EAAKqB,QAAN,CACEI,KAAK,SACLlC,KAAK,SACLQ,MAAOL,EAAYF,OACnBkC,YAAY,QACZF,SAAU5B,OAGd,cAAC+B,EAAA,EAAD,CAAQ1C,UAAU,OAAO2C,QAAQ,UAAUH,KAAK,SAAhD,kC,yCC8DSI,MAvIf,YAAqD,IAA1B1C,EAAyB,EAAzBA,SAAU2C,EAAe,EAAfA,YACnC,EAAsCzC,mBAAS,IAA/C,mBAAO0C,EAAP,KAAoBC,EAApB,KAEMC,EAAU,uCAAG,WAAOjD,GAAP,eAAAkD,EAAA,6DACXC,EAAenD,EADJ,SAEXuB,IACHC,KADG,sDACiD2B,GAAgB,CACnEA,iBAEDxB,MAAK,SAACC,GACDA,EAASC,OACXC,QAAQC,IAAIH,EAASC,MACrB1B,IACA2C,QAVW,2CAAH,sDAcVM,EAAgB,uCAAG,WAAOpD,GAAP,eAAAkD,EAAA,6DACjBG,EAAarD,EADI,SAEjBuB,IACHC,KADG,oDAC+C6B,GAAc,CAC/DA,eAED1B,MAAK,SAACC,GACDA,EAASC,OACXC,QAAQC,IAAIH,EAASC,MACrB1B,QATiB,2CAAH,sDAahBmD,EAAmB,uCAAG,WAAOtD,GAAP,eAAAkD,EAAA,6DACpBK,EAAgBvD,EADI,SAEpBuB,IACHC,KADG,uDACkD+B,GAAiB,CACrEA,kBAED5B,MAAK,SAACC,GACDA,EAASC,OACXC,QAAQC,IAAIH,EAASC,MACrB1B,QAToB,2CAAH,sDA6CzB,OA/BAqD,qBAAU,WACRjC,IACGkC,IAAI,iDACJ9B,MAAK,SAACC,GACL,IAWM8B,EAXqB9B,EAASC,KAAK8B,MAAK,SAACT,EAAGU,GAChD,IAAMC,EAAQX,EAAE5C,WACVwD,EAAQF,EAAEtD,WACZyD,EAAa,EAMjB,OALIF,EAAQC,EACVC,EAAa,EACJF,EAAQC,IACjBC,GAAc,GAETA,KAEiCJ,MAAK,SAACT,EAAGU,GACjD,IAAMC,EAAQX,EAAEzC,KACVqD,EAAQF,EAAEnD,KACZsD,EAAa,EAMjB,OALIF,EAAQC,EACVC,EAAa,EACJF,EAAQC,IACjBC,GAAc,GAETA,KAETf,EAAeU,MAEhB1B,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,QAC7B,CAAC9B,IAGF,eAAC6D,EAAA,EAAD,CAAO/D,UAAU,QAAQgE,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAKxB,QAAQ,OAAlE,UACE,gCACE,+BACE,4CACA,wCAAWG,EAAYsB,OAAvB,YACA,6CACA,sCACA,wCACA,6CAGJ,gCACGtB,EAAYuB,KAAI,SAAC5D,GAEhB,OACE,+BACE,6BAAKA,EAAYJ,aACjB,6BACE,4BAAII,EAAYH,SAElB,+BAAKG,EAAYF,OAAjB,OACA,6BACGE,EAAYD,KACX,wBACER,UAAU,kBACVsE,QAAS,kBAAMjB,EAAoB5C,EAAY8D,MAFjD,kBAOA,wBACEvE,UAAU,gBACVsE,QAAS,kBAAMnB,EAAiB1C,EAAY8D,MAF9C,wBAQJ,6BACE,wBACEvE,UAAU,iBACVsE,QAAS,kBAAMtB,EAAWvC,EAAY8D,MAFxC,SAIE,2CAGJ,6BACE,wBAAQvE,UAAU,kBAAlB,SACE,cAAC,IAAD,CAAMwE,GAAE,kBAAa/D,EAAY8D,KAAjC,0BAjCG9D,EAAY8D,cCiBlBE,MA3Gf,YAAgD,IAA1BvE,EAAyB,EAAzBA,SAAUwE,EAAe,EAAfA,YACxBC,EAAUC,cACVC,EAAQC,cACd,EAAoC1E,mBAAS,CAC3CC,WAAY,EACZC,KAAM,GACNC,OAAQ,EACRC,MAAM,IAJR,mBAAOuE,EAAP,KAAmBC,EAAnB,KAMMC,EAAqB,SAACrE,GAC1BoE,EAAc,2BAAKD,GAAN,kBAAmBnE,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UAGrDoE,EAAiB,uCAAG,WAAOjE,GAAP,iBAAAgC,EAAA,6DACxBhC,EAAMC,iBACAiE,EAAiB/D,KAAKC,UAAU0D,GAChCK,EAAS,CACb5D,QAAS,CACP,eAAgB,kCAChBC,OAAQ,QACR,8BAA+B,MAPX,SAUlBH,IACHC,KADG,0DAEiDsD,EAAMQ,OAAOtF,IAChEoF,EACAC,GAED1D,MAAK,SAACC,GACDA,EAASC,MACXC,QAAQC,IAAIH,EAASC,SAGxBG,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAI,SAAUE,MArBhB,OAsBxBgD,EAAc,CACZ3E,WAAY,EACZC,KAAM,GACNC,OAAQ,IAGVoE,EAAQW,KAAK,KACbZ,IACAxE,IA9BwB,2CAAH,sDA+CvB,OAdAqD,oBAAS,sBAAC,sBAAAN,EAAA,sEACF3B,IACHkC,IADG,sDACgDqB,EAAMQ,OAAOtF,KAChE2B,MAAK,SAACC,GACLE,QAAQC,IAAI,kBAAmBH,EAASC,MACxCoD,EAAc,CACZ3E,WAAYsB,EAASC,KAAKvB,WAC1BC,KAAMqB,EAASC,KAAKtB,KACpBC,OAAQoB,EAASC,KAAKrB,OACtBC,KAAMmB,EAASC,KAAKpB,UAGvBuB,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAI,SAAUE,MAZhC,2CAaP,IAED,eAACjB,EAAA,EAAD,CAAMf,UAAU,aAAagB,SAAUkE,EAAvC,UACE,eAACnE,EAAA,EAAKkB,MAAN,CAAYC,UAAU,gBAAgBlC,UAAU,OAAhD,UACE,cAACe,EAAA,EAAKoB,MAAN,yBACA,eAACpB,EAAA,EAAKqB,QAAN,CACEC,GAAG,SACH/B,KAAK,aACLQ,MAAOiE,EAAW1E,WAClBkC,SAAU0C,EAJZ,UAME,wBAAQnE,MAAM,IAAd,qCACA,wBAAQA,MAAM,IAAd,gCACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,+BACA,wBAAQA,MAAM,IAAd,4CAGJ,eAACC,EAAA,EAAKkB,MAAN,CAAYjC,UAAU,OAAtB,UACE,cAACe,EAAA,EAAKoB,MAAN,wBACA,cAACpB,EAAA,EAAKqB,QAAN,CACEI,KAAK,OACLlC,KAAK,OACLQ,MAAOiE,EAAWzE,KAClBmC,YAAY,kCACZF,SAAU0C,OAGd,eAAClE,EAAA,EAAKkB,MAAN,CAAYjC,UAAU,OAAtB,UACE,cAACe,EAAA,EAAKoB,MAAN,qBACA,cAACpB,EAAA,EAAKqB,QAAN,CACEI,KAAK,SACLlC,KAAK,SACLQ,MAAOiE,EAAWxE,OAClBkC,YAAY,QACZF,SAAU0C,OAGd,cAACvC,EAAA,EAAD,CAAQ1C,UAAU,OAAO2C,QAAQ,SAAjC,SACE,cAAC,IAAD,CAAM6B,GAAG,IAAT,sBAEF,cAAC9B,EAAA,EAAD,CAAQ1C,UAAU,OAAO2C,QAAQ,UAAUH,KAAK,SAAhD,wB,QCxES+C,MA9Bf,YAAoC,EAAbC,UAAc,IACnC,EAAwBpF,oBAAS,GAAjC,mBAAOqF,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAElC,OACE,mCACE,eAACE,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAQH,EAAaF,KAAMA,EAA3C,UACE,cAACG,EAAA,EAAMG,OAAP,CAAc/F,UAAU,mDAAxB,SACE,cAAC4F,EAAA,EAAMI,MAAP,UACE,oBAAIhG,UAAU,cAAd,sCAGJ,eAAC4F,EAAA,EAAMK,KAAP,CAAYjG,UAAU,cAAtB,UACE,oBAAGA,UAAU,UAAb,4CAEE,uBAFF,6BAIA,uBALF,uDAOA,cAAC4F,EAAA,EAAMM,OAAP,UACE,cAACxD,EAAA,EAAD,CAAQC,QAAQ,OAAO2B,QAASqB,EAAhC,2BCqGKQ,MAlHf,WACE,MAA8B/F,oBAAS,GAAvC,mBAAOgG,EAAP,KAAgBC,EAAhB,KACA,EAAkCjG,oBAAS,GAA3C,mBAAOkG,EAAP,KAAkBC,EAAlB,KACA,EAA8BnG,oBAAS,GAAvC,mBAAOoG,EAAP,KAAgBC,EAAhB,KACA,EAAkDrG,oBAAS,GAA3D,mBAAOsG,EAAP,KAA0BC,EAA1B,KACA,EAAsDvG,oBAAS,GAA/D,mBAAOwG,EAAP,KAA4BC,EAA5B,KACA,EAAsDzG,oBAAS,GAA/D,mBAAO0G,EAAP,KAA4BC,EAA5B,KACMC,EAAgB,WACpBT,GAAcD,IA8BhB,OAVA/C,qBAAU,WACR0D,YAAW,WACTR,GAAW,KACV,OACF,IACHlD,qBAAU,WACR0D,YAAW,WACTZ,GAAW,KACV,OACF,IACED,EAQD,uBAAMpG,UAAU,MAAhB,UACGwG,EAAU,cAAC,EAAD,IAAsB,KACjC,eAAC,IAAD,WACE,eAAC,IAAD,CAAOU,KAAK,IAAIC,OAAK,EAArB,UACE,sBAAKnH,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,4CACA,sBAAKoH,MAAO,CAAEC,OAAQ,QAAtB,UACGX,EACC,qBAAKU,MAAO,CAAEC,OAAQ,QAAtB,SACG,CAAC,WAAWhD,KAAI,SAAC1B,EAAS2E,GAAV,OACf,cAACC,EAAA,EAAD,CAAiB5E,QAASA,EAA1B,kDAAY2E,QAKd,KACHV,EACC,8BACG,CAAC,UAAUvC,KAAI,SAAC1B,EAAS2E,GAAV,OACd,cAACC,EAAA,EAAD,CAAiB5E,QAASA,EAA1B,gDAAY2E,QAKd,KACHR,EACC,8BACG,CAAC,WAAWzC,KAAI,SAAC1B,EAAS2E,GAAV,OACf,cAACC,EAAA,EAAD,CAAiB5E,QAASA,EAA1B,gDAAY2E,QAKd,WAGR,qBAAKtH,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,cAAC,EAAD,CACEE,SAAU8G,EACV7G,UA7EG,WACnBwG,GAAqB,GACrBM,YAAW,WACTN,GAAqB,KACpB,WA4ES,qBAAK3G,UAAU,uCAAf,SACE,cAAC,EAAD,CACEE,SAAU8G,EACVnE,YA7EI,WACpBgE,GAAuB,GACvBI,YAAW,WACTJ,GAAuB,KACtB,mBA+EG,eAAC,IAAD,CAAOK,KAAK,cAAZ,UACE,qBAAKlH,UAAU,4BAAf,SACE,oBAAIA,UAAU,WAAd,gCAEF,cAAC,EAAD,CACEE,SAAU8G,EACVtC,YAnFU,WACpBqC,GAAuB,GACvBE,YAAW,WACTF,GAAuB,KACtB,kBAcD,qBAAK/G,UAAU,YAAf,SACE,cAAC,EAAD,OCxCOwH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhG,MAAK,YAAkD,IAA/CiG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAYC,SAAS,IAArB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a0287a30.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction LoadingPage() {\n  return (\n    <section\n      id=\"loadingPage\"\n      className=\"d-flex flex-column justify-content-center align-items-center\"\n    >\n      <h1>Welcome to Grocery App</h1>\n      <p className=\"text-muted\">\n        Developed for Active IT Recruitment by <b>Murat Can Öncü</b>\n      </p>\n    </section>\n  );\n}\n\nexport default LoadingPage;\n","import { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nfunction AddingForm({ updating, itemAdded }) {\n  const [groceryItem, setGroceryItem] = useState({\n    importance: 1,\n    name: \"\",\n    amount: 0,\n    done: false,\n  });\n  const updateInput = (e) => {\n    setGroceryItem({ ...groceryItem, [e.target.name]: e.target.value });\n  };\n  const addNewGrocery = (event) => {\n    event.preventDefault();\n    const jsonGrocery = JSON.stringify(groceryItem);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        Accept: \"Token\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n    axios\n      .post(\"https://activeitserver.herokuapp.com/additem\", jsonGrocery, config)\n      .then((response) => {\n        if (response.data) {\n          console.log(response.data);\n          updating();\n          itemAdded();\n        }\n      })\n      .catch((err) => console.log(\"Error:\", err));\n    setGroceryItem({\n      importance: 1,\n      name: \"\",\n      amount: 0,\n      done: false,\n    });\n  };\n  return (\n    <Form className=\"addingForm w-100\" onSubmit={addNewGrocery}>\n      <Form.Group controlId=\"formGridState\" className=\"mt-2\">\n        <Form.Label>Importance</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"importance\"\n          defaultValue=\"1 - Very Much Important\"\n          onChange={updateInput}\n        >\n          <option value=\"1\">1 - Very Much Important</option>\n          <option value=\"2\">2 - Very Important</option>\n          <option value=\"3\">3 - Important</option>\n          <option value=\"4\">4 - Not Important</option>\n          <option value=\"5\">5 - Not Important At All</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group className=\"mt-2\">\n        <Form.Label>Item Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          value={groceryItem.name}\n          placeholder=\"Tomato, Garlic, Melon, Apple...\"\n          onChange={updateInput}\n        />\n      </Form.Group>\n      <Form.Group className=\"mt-2\">\n        <Form.Label>Amount</Form.Label>\n        <Form.Control\n          type=\"number\"\n          name=\"amount\"\n          value={groceryItem.amount}\n          placeholder=\".. kg\"\n          onChange={updateInput}\n        />\n      </Form.Group>\n      <Button className=\"mt-2\" variant=\"success\" type=\"submit\">\n        Add The New Item\n      </Button>\n    </Form>\n  );\n}\n\nexport default AddingForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nfunction GroceryItemList({ updating, itemDeleted }) {\n  const [groceryList, setGroceryList] = useState([]);\n\n  const deleteItem = async (id) => {\n    const removeItemId = id;\n    await axios\n      .post(`https://activeitserver.herokuapp.com/delete/${removeItemId}`, {\n        removeItemId,\n      })\n      .then((response) => {\n        if (response.data) {\n          console.log(response.data);\n          updating();\n          itemDeleted();\n        }\n      });\n  };\n  const updateToDoneItem = async (id) => {\n    const doneItemId = id;\n    await axios\n      .post(`https://activeitserver.herokuapp.com/done/${doneItemId}`, {\n        doneItemId,\n      })\n      .then((response) => {\n        if (response.data) {\n          console.log(response.data);\n          updating();\n        }\n      });\n  };\n  const updateToNotDoneItem = async (id) => {\n    const notDoneItemId = id;\n    await axios\n      .post(`https://activeitserver.herokuapp.com/notdone/${notDoneItemId}`, {\n        notDoneItemId,\n      })\n      .then((response) => {\n        if (response.data) {\n          console.log(response.data);\n          updating();\n        }\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"https://activeitserver.herokuapp.com/showitem\")\n      .then((response) => {\n        const itemListImportance = response.data.sort((a, b) => {\n          const itemA = a.importance;\n          const itemB = b.importance;\n          let comparison = 0;\n          if (itemA > itemB) {\n            comparison = 1;\n          } else if (itemA < itemB) {\n            comparison = -1;\n          }\n          return comparison;\n        });\n        const itemListByDone = itemListImportance.sort((a, b) => {\n          const itemA = a.done;\n          const itemB = b.done;\n          let comparison = 0;\n          if (itemA > itemB) {\n            comparison = 1;\n          } else if (itemA < itemB) {\n            comparison = -1;\n          }\n          return comparison;\n        });\n        setGroceryList(itemListByDone);\n      })\n      .catch((err) => console.log(err));\n  }, [updating]);\n\n  return (\n    <Table className=\"w-100\" striped bordered hover size=\"lg\" variant=\"dark\">\n      <thead>\n        <tr>\n          <th>Importance</th>\n          <th>Name ({groceryList.length} item)</th>\n          <th>Amount (kg)</th>\n          <th>Done</th>\n          <th>Delete</th>\n          <th>Update</th>\n        </tr>\n      </thead>\n      <tbody>\n        {groceryList.map((groceryItem) => {\n          // console.log(groceryItem.name, \":\", groceryItem.done);\n          return (\n            <tr key={groceryItem._id}>\n              <td>{groceryItem.importance}</td>\n              <td>\n                <b>{groceryItem.name}</b>\n              </td>\n              <td>{groceryItem.amount} </td>\n              <td>\n                {groceryItem.done ? (\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={() => updateToNotDoneItem(groceryItem._id)}\n                  >\n                    Done\n                  </button>\n                ) : (\n                  <button\n                    className=\"btn btn-light\"\n                    onClick={() => updateToDoneItem(groceryItem._id)}\n                  >\n                    Not Done\n                  </button>\n                )}\n              </td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => deleteItem(groceryItem._id)}\n                >\n                  <a>Delete</a>\n                </button>\n              </td>\n              <td>\n                <button className=\"btn btn-warning\">\n                  <Link to={`/update/${groceryItem._id}`}>Update</Link>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default GroceryItemList;\n","import { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nfunction UpdatePage({ updating, itemUpdated }) {\n  const history = useHistory();\n  const match = useRouteMatch();\n  const [updateItem, setUpdateItem] = useState({\n    importance: 1,\n    name: \"\",\n    amount: 0,\n    done: false,\n  });\n  const updateInputHandler = (e) => {\n    setUpdateItem({ ...updateItem, [e.target.name]: e.target.value });\n  };\n  //!  Sending updated Data\n  const updateGroceryItem = async (event) => {\n    event.preventDefault();\n    const jsonUpdateItem = JSON.stringify(updateItem);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        Accept: \"Token\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n    await axios\n      .post(\n        `https://activeitserver.herokuapp.com/updatepost/${match.params.id}`,\n        jsonUpdateItem,\n        config\n      )\n      .then((response) => {\n        if (response.data) {\n          console.log(response.data);\n        }\n      })\n      .catch((err) => console.log(\"Error:\", err));\n    setUpdateItem({\n      importance: 1,\n      name: \"\",\n      amount: 0,\n    });\n\n    history.push(\"/\");\n    itemUpdated();\n    updating();\n  };\n  //! Getting item to update\n  useEffect(async () => {\n    await axios\n      .get(`https://activeitserver.herokuapp.com/update/${match.params.id}`)\n      .then((response) => {\n        console.log(\"Item to update:\", response.data);\n        setUpdateItem({\n          importance: response.data.importance,\n          name: response.data.name,\n          amount: response.data.amount,\n          done: response.data.done,\n        });\n      })\n      .catch((err) => console.log(\"Error:\", err));\n  }, []);\n  return (\n    <Form className=\"addingForm\" onSubmit={updateGroceryItem}>\n      <Form.Group controlId=\"formGridState\" className=\"mt-2\">\n        <Form.Label>Importance</Form.Label>\n        <Form.Control\n          as=\"select\"\n          name=\"importance\"\n          value={updateItem.importance}\n          onChange={updateInputHandler}\n        >\n          <option value=\"1\">1 - Very Much Important</option>\n          <option value=\"2\">2 - Very Important</option>\n          <option value=\"3\">3 - Important</option>\n          <option value=\"4\">4 - Not Important</option>\n          <option value=\"5\">5 - Not Important At All</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group className=\"mt-2\">\n        <Form.Label>Item Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          value={updateItem.name}\n          placeholder=\"Tomato, Garlic, Melon, Apple...\"\n          onChange={updateInputHandler}\n        />\n      </Form.Group>\n      <Form.Group className=\"mt-2\">\n        <Form.Label>Amount</Form.Label>\n        <Form.Control\n          type=\"number\"\n          name=\"amount\"\n          value={updateItem.amount}\n          placeholder=\".. kg\"\n          onChange={updateInputHandler}\n        />\n      </Form.Group>\n      <Button className=\"mt-2\" variant=\"danger\">\n        <Link to=\"/\">Cancel</Link>\n      </Button>\n      <Button className=\"mt-2\" variant=\"primary\" type=\"submit\">\n        Update\n      </Button>\n    </Form>\n  );\n}\n\nexport default UpdatePage;\n","import { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction UserMessage({ showModal }) {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <Modal centered onHide={handleClose} show={show}>\n        <Modal.Header className=\"d-flex justify-content-center align-items-center\">\n          <Modal.Title>\n            <h2 className=\"text-center\">Murat Can Öncü</h2>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <p className=\"h4 mb-0\">\n            Thank you for visiting my page!\n            <br /> I wish you having fun!\n          </p>\n          <br /> Please, click \"Close\" or somewhere on the screen\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"dark\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default UserMessage;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Alert } from \"react-bootstrap\";\n//! Components\nimport LoadingPage from \"./NewComponents/LoadingPage/LoadingPage\";\nimport AddingForm from \"./NewComponents/AddingForm/AddingForm\";\nimport GroceryList from \"./NewComponents/ItemList/GroceryItemList\";\nimport UpdateForm from \"./NewComponents/UpdatePage/UpdatePage\";\nimport Message from \"./NewComponents/UserMessage/UserMessage\";\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [message, setMessage] = useState(false);\n  const [successfullyAdded, setSuccessfullyAdded] = useState(false);\n  const [successfullyRemoved, setSuccessfullyRemoved] = useState(false);\n  const [successfullyUpdated, setSuccessfullyUpdated] = useState(false);\n  const updateHandler = () => {\n    setIsUpdated(!isUpdated);\n  };\n  const itemAddedMsg = () => {\n    setSuccessfullyAdded(true);\n    setTimeout(() => {\n      setSuccessfullyAdded(false);\n    }, 1800);\n  };\n  const itemDeleteMsg = () => {\n    setSuccessfullyRemoved(true);\n    setTimeout(() => {\n      setSuccessfullyRemoved(false);\n    }, 1800);\n  };\n  const itemUpdateMsg = () => {\n    setSuccessfullyUpdated(true);\n    setTimeout(() => {\n      setSuccessfullyUpdated(false);\n    }, 1800);\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      setMessage(true);\n    }, 2000);\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(true);\n    }, 900);\n  }, []);\n  if (!loading) {\n    return (\n      <div className=\"loadingBG\">\n        <LoadingPage></LoadingPage>\n      </div>\n    );\n  } else {\n    return (\n      <main className=\"App\">\n        {message ? <Message></Message> : null}\n        <Switch>\n          <Route path=\"/\" exact>\n            <div className=\"headerBox\">\n              <h1 className=\"headerText\">You Can Add a New Item to List</h1>\n              <div style={{ height: \"67px\" }}>\n                {successfullyAdded ? (\n                  <div style={{ height: \"85px\" }}>\n                    {[\"success\"].map((variant, idx) => (\n                      <Alert key={idx} variant={variant}>\n                        New item has been successfully added!\n                      </Alert>\n                    ))}\n                  </div>\n                ) : null}\n                {successfullyRemoved ? (\n                  <div>\n                    {[\"danger\"].map((variant, idx) => (\n                      <Alert key={idx} variant={variant}>\n                        Item has been successfully deleted!\n                      </Alert>\n                    ))}\n                  </div>\n                ) : null}\n                {successfullyUpdated ? (\n                  <div>\n                    {[\"warning\"].map((variant, idx) => (\n                      <Alert key={idx} variant={variant}>\n                        Item has been successfully updated!\n                      </Alert>\n                    ))}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-md-12 col-lg-4 mx-auto\">\n                  <AddingForm\n                    updating={updateHandler}\n                    itemAdded={itemAddedMsg}\n                  ></AddingForm>\n                </div>\n                <div className=\"col-sm-12 col-md-12 col-lg-6 mx-auto\">\n                  <GroceryList\n                    updating={updateHandler}\n                    itemDeleted={itemDeleteMsg}\n                  ></GroceryList>\n                </div>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/update/:id\">\n            <div className=\"headerBox updateHeaderBox\">\n              <h1 className=\"formText\">Update Your Item</h1>\n            </div>\n            <UpdateForm\n              updating={updateHandler}\n              itemUpdated={itemUpdateMsg}\n            ></UpdateForm>\n          </Route>\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}